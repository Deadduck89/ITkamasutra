{"version":3,"sources":["Components/Common/FormControls/FormControls.jsx","Utils/validators/Validators.jsx","Components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","Components/Dialogs/AddMessageForm/addMessageForm.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Messages/Messages.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["formControl","tag","input","meta","touched","error","props","hasError","className","styles","form","React","createElement","Textarea","Input","createField","placeholder","name","component","validator","text","loginField","validate","required","value","maxLengthCreator","maxLength","length","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","connect","DialogItem","path","id","classes","dialog","src","avatar","activeClassName","active","Message","message","maxLength100","AddMessageReduxForm","reduxForm","addMessageForm","onSubmit","handleSubmit","Field","addMessageField","Button","type","Dialogs","dialogsPage","dialogElements","dialogs","map","key","user","messagesElements","messages","dialogItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/5.fc89ef7e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nfunction formControl(tag) {\r\n    return ({input, meta:{touched, error}, ...props}) => {\r\n        const hasError = touched && error\r\n        return (\r\n            <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n                <div className={styles.form}>\r\n                    {React.createElement( tag, {...input, ...props} )}\r\n                </div>\r\n                <div>\r\n                    {hasError && <span>{error}</span>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Textarea = formControl( 'textarea' )\r\n\r\nexport const Input = formControl( 'input' )\r\n\r\nexport const createField = (placeholder, name, component, validator, props={}, text=\"\") => {\r\n    return <div className={styles.loginField}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validator}\r\n               {...props}/>{text}\r\n    </div>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is requred\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3vDbR\",\"dialogItems\":\"Dialogs_dialogItems__ru-XR\",\"active\":\"Dialogs_active__1utVt\",\"messages\":\"Dialogs_messages__XWB5m\",\"dialog\":\"Dialogs_dialog__3sjMa\",\"message\":\"Dialogs_message__hc1dH\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addMessageForm\":\"addMessageForm_addMessageForm__2ju1r\",\"addMessageField\":\"addMessageForm_addMessageField__1VKm3\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/validators/Validators\";\r\nimport styles from \"./addMessageForm.module.css\"\r\nimport Button from \"../../Common/Button/Button\";\r\n\r\nconst maxLength100 = maxLengthCreator( 100 );\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={styles.addMessageForm} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={styles.addMessageField} component={Textarea} name=\"newMessageBody\" placeholder=\"Enter your message\" validate={[required, maxLength100]}/>\r\n            </div>\r\n            <div>\r\n                <Button type='send'/>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm( {form: 'dialogAddMessageForm'} )( AddMessageForm )\r\n\r\nexport default AddMessageReduxForm","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Messages\";\r\nimport AddMessageReduxForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map(\r\n        dialog => <DialogItem key={dialog.id}\r\n                              name={dialog.user}\r\n                              id={dialog.id}\r\n                              avatar={dialog.avatar}/>\r\n    );\r\n    let messagesElements = state.messages.map(\r\n        message => <Message key={message.id}\r\n                            message={message.message}/>\r\n    );\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div>\r\n            <div className={classes.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch( sendMessageCreator(newMessageBody) );\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default compose( connect( mapStateToProps, mapDispatchToProps ), withAuthRedirect )( Dialogs )\r\n;"],"sourceRoot":""}