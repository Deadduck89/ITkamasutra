{"version":3,"sources":["Components/Common/FormControls/FormControls.jsx","Utils/validators/Validators.jsx","Components/Login/Login.module.css","Components/Login/Login.jsx"],"names":["formControl","tag","input","meta","touched","error","props","hasError","className","styles","form","React","createElement","Textarea","Input","createField","placeholder","name","component","validator","text","loginField","validate","required","value","maxLengthCreator","maxLength","length","module","exports","LoginReduxForm","reduxForm","handleSubmit","classes","loginForm","onSubmit","type","formSummaryError","loginButton","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"sTAIA,SAASA,EAAYC,GACjB,OAAO,YAA+C,IAA7CC,EAA4C,EAA5CA,MAA4C,IAArCC,KAAMC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAWC,EAAW,iBAC3CC,EAAWH,GAAWC,EAC5B,OACI,yBAAKG,UAAWC,IAAOT,YAAc,KAAOO,EAAWE,IAAOJ,MAAQ,KAClE,yBAAKG,UAAWC,IAAOC,MAClBC,IAAMC,cAAeX,EAArB,2BAA8BC,GAAUI,KAE7C,6BACKC,GAAY,8BAAOF,MAOjC,IAAMQ,EAAWb,EAAa,YAExBc,EAAQd,EAAa,SAErBe,EAAc,SAACC,EAAaC,EAAMC,EAAWC,GAAkC,IAAvBb,EAAsB,uDAAhB,GAAIc,EAAY,uDAAP,GAChF,OAAO,yBAAKZ,UAAWC,IAAOY,YAC1B,kBAAC,IAAD,eAAOL,YAAaA,EACbC,KAAMA,EACNC,UAAWA,EACXI,SAAUH,GACNb,IAASc,K,iCC9B5B,oEAAO,IAAMG,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,oBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,oBCNlCE,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,6B,iCCDlG,wHA2BMC,EAAiBC,YAAU,CAACrB,KAAK,SAAhBqB,EAhBL,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,MAC9B,OACI,0BAAMG,UAAWyB,IAAQC,UAAWC,SAAUH,GACrCjB,YAAY,QAAS,QAASD,IAAO,CAACS,MACtCR,YAAY,WAAY,WAAYD,IAAO,CAACS,KAAW,CAACa,KAAK,aAC7DrB,YAAY,KAAM,aAAcD,IAAO,KAAM,CAACsB,KAAK,YAAa,mFACpE/B,GAAS,yBAAKG,UAAWC,IAAO4B,kBAC5BhC,GAEL,yBAAKG,UAAWyB,IAAQK,aACrB,kBAAC,IAAD,CAAQF,KAAK,eA0BbG,uBAHS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAEiB,CAACE,WAA1BJ,EAlBD,SAACjC,GAIX,OAAIA,EAAMmC,OACC,kBAAC,IAAD,CAAUG,GAAI,aAGzB,yBAAKpC,UAAWyB,IAAQU,OACpB,oGACA,kBAACb,EAAD,CAAgBK,SATF,SAAAU,GACdvC,EAAMqC,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/6.0bd41fb7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nfunction formControl(tag) {\r\n    return ({input, meta:{touched, error}, ...props}) => {\r\n        const hasError = touched && error\r\n        return (\r\n            <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n                <div className={styles.form}>\r\n                    {React.createElement( tag, {...input, ...props} )}\r\n                </div>\r\n                <div>\r\n                    {hasError && <span>{error}</span>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Textarea = formControl( 'textarea' )\r\n\r\nexport const Input = formControl( 'input' )\r\n\r\nexport const createField = (placeholder, name, component, validator, props={}, text=\"\") => {\r\n    return <div className={styles.loginField}>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validator}\r\n               {...props}/>{text}\r\n    </div>\r\n}","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is requred\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1zeTA\",\"loginForm\":\"Login_loginForm__IZKsy\",\"loginButton\":\"Login_loginButton__2sP8a\"};","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormControls/FormControls\";\r\nimport {required} from \"../../Utils/validators/Validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../Common/FormControls/FormControls.module.css\"\r\nimport classes from \"./Login.module.css\"\r\nimport Button from \"../Common/Button/Button\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form className={classes.loginForm} onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", Input, [required])}\r\n                {createField(\"Password\", \"password\", Input, [required], {type:\"password\"})}\r\n                {createField(null, \"rememberMe\", Input, null, {type:\"checkbox\"}, \"Запомнить меня\")}\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div className={classes.loginButton}>\r\n               <Button type='login' />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData=>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    })\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n    <div className={classes.login}>\r\n        <h3>Войти на сайт</h3>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}